---
import type { MarkdownHeading } from "astro";
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

// TableOfContents.astro
const { headings } = Astro.props;
const toc = buildToc(headings);

interface Heading {
  subheadings: Heading[];
  depth: number;
  slug: string;
  text: string;
}

function buildToc(headings: MarkdownHeading[]) {
  const toc: Heading[] = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    console.log("HEADING: ", h);
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1) {
      toc.push(heading);
    } else {
      console.log("Parent headings", parentHeadings);
      console.log("WHAT WE GOT :", parentHeadings.get(heading.depth - 1));
      const item = parentHeadings.get(heading.depth - 1);
      if (item) {
        item.subheadings.push(heading);
      }
    }
  });
  return toc;
}
---

<nav class="toc w-3/5 max-w-3/5">
  <div class="text-4xl font-semibold mb-4">Table of Contents</div>
  <ul class="list-none pl-0">
    {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
</nav>
