---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { style_layer_experiments } from "./data.ts";
import { getMinLoss } from "./utils";
interface Image {
    experimentHash: string;
    iteration: number;
    url: string;
    metadata: any;
}

function parseImage([path, metadata]: [string, any]): Image {
    // Assuming images are name_experiment_iteration.jpeg
    const parts = path.split("_");
    // Cut off .jpeg
    const iteration = Number(parts[parts.length - 1].slice(0, -5));
    const experimentHash = parts.slice(1, parts.length - 1).join("");
    const url = path;
    return {
        iteration,
        experimentHash,
        url,
        metadata,
    };
}

const images: Image[] = Object.entries(
    import.meta.glob<{ default: ImageMetadata }>(
        "/src/assets/assgn4/experiment3/*.{jpeg,jpg,png,gif}",
    ),
).map(parseImage);

const iterations = [0, 50, 100, 150, 250, 300];
const experiments = [...new Set(images.map((image) => image.experimentHash))];
---

<div class="overflow-x-auto overflow-y-auto max-h-[80rem]">
    <table class="not-prose">
        <thead>
            <tr>
                <th class="text-xs">Conv Style Layers / Iteration Count</th>
                {iterations.map((iteration) => <th>{iteration}</th>)}
            </tr>
        </thead>
        <tbody>
            {
                experiments.map((experimentHash) => (
                    <tr>
                        <td>{experimentHash.replace(/_/g, ", ")}</td>
                        {iterations.map((iteration) => {
                            const image = images.find(
                                (img) =>
                                    img.experimentHash === experimentHash &&
                                    img.iteration === iteration,
                            );
                            return (
                                // <td class="not-prose">
                                <td>
                                    {image ? (
                                        <Image
                                            class="not-prose"
                                            src={image.metadata()}
                                            class="min-w-[150px] min-h-[150px] object-cover"
                                            alt={`${experimentHash}_${iteration}`}
                                        />
                                    ) : (
                                        <span>N/A</span>
                                    )}
                                </td>
                            );
                        })}
                    </tr>
                ))
            }
        </tbody>
    </table>
</div>
